apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: zookeeper
  name: zookeeper
  namespace: datahive
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - image: zookeeper:latest
          imagePullPolicy: IfNotPresent
          name: zookeeper
          ports:
            - containerPort: 2181
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kafka-service
  name: kafka-service
  namespace: datahive
spec:
  type: LoadBalancer
  ports:
  - port: 9092
  selector:
    app: kafka-broker
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: zookeeper-service
  name: zookeeper-service
  namespace: datahive 
spec:
  type: LoadBalancer
  ports:
    - name: zookeeper-port
      port: 2181
      targetPort: 2181
  selector:
    app: zookeeper
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafka-broker
  name: kafka-broker
  namespace: datahive
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-broker
  template:
    metadata:
      labels:
        app: kafka-broker
    spec:
      hostname: kafka-broker
      containers:
      - env:
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper-service.datahive.svc.cluster.local:2181
        - name: KAFKA_LISTENERS
          value: PLAINTEXT://:9092
        - name: KAFKA_ADVERTISED_LISTENERS
          value: PLAINTEXT://10.43.18.80:9092
        - name: ALLOW_PLAINTEXT_LISTENER
          value: "yes"
        image: bitnami/kafka:3.1.2
        imagePullPolicy: IfNotPresent
        name: kafka-broker
        ports:
        - containerPort: 9092
---
################
#### HADOOP ####
################
apiVersion: v1
kind: ConfigMap
metadata:
  name: hadoop-conf
  namespace: datahive
data: 
  "CORE-SITE.XML_fs.default.name": "hdfs://namenodesvc.datahive.svc.cluster.local"
  "CORE-SITE.XML_fs.defaultFS": "hdfs://namenodesvc.datahive.svc.cluster.local"
  "HDFS-SITE.XML_dfs.namenode.rpc-address": "namenodesvc.datahive.svc.cluster.local:8020"
  "HDFS-SITE.XML_dfs.replication": "1"
  "MAPRED-SITE.XML_mapreduce.framework.name": "yarn"
  "MAPRED-SITE.XML_yarn.app.mapreduce.am.env": "HADOOP_MAPRED_HOME=$HADOOP_HOME"
  "MAPRED-SITE.XML_mapreduce.map.env": "HADOOP_MAPRED_HOME=$HADOOP_HOME"
  "MAPRED-SITE.XML_mapreduce.reduce.env": "HADOOP_MAPRED_HOME=$HADOOP_HOME"
  "YARN-SITE.XML_yarn.resourcemanager.hostname": "resourcemanagersvc.datahive.svc.cluster.local"
  "YARN-SITE.XML_yarn.nodemanager.pmem-check-enabled": "false"
  "YARN-SITE.XML_yarn.nodemanager.delete.debug-delay-sec": "600"
  "YARN-SITE.XML_yarn.nodemanager.vmem-check-enabled": "false"
  "YARN-SITE.XML_yarn.nodemanager.aux-services": "mapreduce_shuffle"
  "CAPACITY-SCHEDULER.XML_yarn.scheduler.capacity.maximum-applications": "10000"
  "CAPACITY-SCHEDULER.XML_yarn.scheduler.capacity.maximum-am-resource-percent": "0.1"
  "CAPACITY-SCHEDULER.XML_yarn.scheduler.capacity.resource-calculator": "org.apache.hadoop.yarn.util.resource.DefaultResourceCalculator"
  "CAPACITY-SCHEDULER.XML_yarn.scheduler.capacity.root.queues": "default"
  "CAPACITY-SCHEDULER.XML_yarn.scheduler.capacity.root.default.capacity": "100"
  "CAPACITY-SCHEDULER.XML_yarn.scheduler.capacity.root.default.user-limit-factor": "1"
  "CAPACITY-SCHEDULER.XML_yarn.scheduler.capacity.root.default.maximum-capacity": "100"
  "CAPACITY-SCHEDULER.XML_yarn.scheduler.capacity.root.default.state": "RUNNING"
  "CAPACITY-SCHEDULER.XML_yarn.scheduler.capacity.root.default.acl_submit_applications": "*"
  "CAPACITY-SCHEDULER.XML_yarn.scheduler.capacity.root.default.acl_administer_queue": "*"
  "CAPACITY-SCHEDULER.XML_yarn.scheduler.capacity.node-locality-delay": "40"
  "CAPACITY-SCHEDULER.XML_yarn.scheduler.capacity.queue-mappings": ""
  "CAPACITY-SCHEDULER.XML_yarn.scheduler.capacity.queue-mappings-override.enable": "false"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hadoop-nodemanager
  namespace: datahive
  labels:
    app: nodemanager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nodemanager
  template:
    metadata:
      labels:
        app: nodemanager
    spec:
      containers:
        - name: nodemanager
          image: apache/hadoop:3
          command: ["yarn", "nodemanager"]
          envFrom:
            - configMapRef:
                name: hadoop-conf
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hadoop-resourcemanager
  namespace: datahive
  labels:
    app: resourcemanager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: resourcemanager
  template:
    metadata:
      labels:
        app: resourcemanager
    spec:
      containers:
        - name: resourcemanager
          image: apache/hadoop:3
          command: ["yarn", "resourcemanager"]
          envFrom:
            - configMapRef:
                name: hadoop-conf
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hadoop-datanode
  namespace: datahive
  labels:
    app: datanode
spec:
  replicas: 1
  selector:
    matchLabels:
      app: datanode
  template:
    metadata:
      labels:
        app: datanode
    spec:
      containers:
        - name: datanode
          image: apache/hadoop:3
          command: ["hdfs", "datanode"]
          envFrom:
            - configMapRef:
                name: hadoop-conf
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hadoop-namenode
  namespace: datahive
  labels:
    app: namenode
spec:
  replicas: 1
  selector:
    matchLabels:
      app: namenode
  template:
    metadata:
      labels:
        app: namenode
    spec:
      containers:
        - name: namenode
          image: apache/hadoop:3
          command: ["tail","-f", "/dev/null"]
          envFrom:
            - configMapRef:
                name: hadoop-conf
---
apiVersion: v1
kind: Service
metadata:
  name: namenodesvc
  namespace: datahive
spec:
  type: ClusterIP
  ports:
  - port: 9870
    name: comm-port
    targetPort: 9870
  - port: 8020
    name: rpc-port
    targetPort: 8020
  selector:
    app: namenode
---
apiVersion: v1
kind: Service
metadata:
  name: resourcemanagersvc
  namespace: datahive
spec:
  type: ClusterIP
  ports:
  - port: 8030
    name: rpc-port-1
    targetPort: 8030
  - port: 8031
    name: rpc-port-2
    targetPort: 8031
  - port: 8032
    name: rpc-port-3
    targetPort: 8032
  - port: 8033
    name: rpc-port-4
    targetPort: 8033
  selector:
    app: resourcemanager
